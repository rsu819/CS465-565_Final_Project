// dependencies
var app = require('../app');
var http = require('http');
var debug = require('debug')('express-backend:server');
const trefle = require('../api/trefle');

var portNum = '3000';


var port = normalizePort(process.env.PORT || portNum);
app.set('port', port);


// create http server
var server = http.createServer(app);

// listen on port
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

let jwt = "";
trefle.getAuth().then(response => (app.set('jwt', response.token)));
console.log(jwt);
module.exports = app;

function normalizePort(val) {
    var port = parseInt(val, 10);
  
    if (isNaN(port)) {
      // named pipe
      return val;
    }
  
    if (port >= 0) {
      // port number
      return port;
    }
  
    return false;
  }

  
 // Event listener for HTTP server listening event
function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);
  }
  
  function onError(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }
  
    var bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;
  
    // handle specific listen errors with friendly messages
    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
  }