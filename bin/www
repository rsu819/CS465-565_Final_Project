// dependencies
const app = require("../app");
const http = require("http");
const debug = require("debug")("express-backend:server");
//const trefle = require("../trefle");

require('dotenv').config();   // loads .env file in root and initializes values

let portNum = "3000";
let port = normalizePort(process.env.PORT || portNum);
app.set("port", port);

// create http server, app is callback function to invoke upon HTTP request
let server = http.createServer(app);

// listen on port
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  let port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

// Event listener for HTTP server listening event
function onListening() {
  let addr = server.address();
  let bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  let bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

